This file describes the current working behaviour of the ng-nfd firmware.

----------------------
Compiling the firmware
----------------------
XXX: Currently assume flowenv.hg and ng-nfd.hg are cloned. Test to see if
the build-infra target for ng-nfd.hg pulls in flowenv.hg, and provide
instructions for fetching ng-nfd.hg itself.

To compile and link the firmware, issue the following command:
build-infra.hg/workdir$ make nfd_vnic.fw

Once it successfully completes, the following directories and files will be
available:
build-infra/workdir/host-system/ng-nfd.hg/me/mefw-ng-nfd/
    nfd_vnic.map
    nfd_vnic.fw
build-infra/workdir/host-system/ng-nfd.hg/me/build-ng-nfd/nfd_vnic/
    mei0_me0.list
    pcie1_me0.list
    pcie1_me1.list
    pcie1_me2.list
    pcie1_me3.list
build-infra.hg/workdir/mefw/ng-nfd/
    nfd_vnic.fw

The list files provide the instructions that are run on each ME, the map file
provides the size and addresses of (most) memory variables, and the .fw file
can be loaded into the simulator.

Sample map file, # marks comments:
Memory Map file: host-system/ng-nfd.hg/me/mefw-ng-nfd/nfd_vnic.map
Date: Thu May  1 16:45:56 2014

nfld version: 5.1.0.0-devel,  NFFW: host-system/ng-nfd.hg/me/mefw-ng-nfd/nfd_vnic.fw

Address       Region     ByteSize        Symbol
===================================================
0x0000000000180000    i24.emem      2048                _vnic_cfg_pcie1_ring2      # unused
0x0000000000000000    i25.emem      2048                _vnic_cfg_pcie1_ring0      # PCI.IN ME0 to PCI.OUT ME0
0x0000000000000000    i26.emem      65536               _vnic_cfg_pcie1_base       # Configuration BAR memory
0x0000000000180800    i24.emem      2048                _vnic_cfg_pcie1_ring1      # PCI.OUT ME0 to app ME master
0x0000000000000000    i5.me0.lm     2048                i5.me0._queue_data         # Per queue state PCI.OUT ME0
0x0000000000000000    i5.me1.lm     256                 i5.me1._ring_rids          # Per queue state PCI.OUT ME1, just RID currently
0x0000000000002000    i5.cls        8192                i5._desc_ring              # Ring for PCI.IN to DMA TX descr. into
0x0000000000000000    i5.me2.lm     2048                i5.me2._queue_data         # Per queue state PCI.IN ME0
0x0000000000001000    i25.emem      4096                _work_batches              # Journal for PCI.IN ME1 batches received
0x0000000000000000    i5.me3.lm     256                 i5.me3._ring_rids.9        # Per queue state PCI.IN ME1, just RID currently

ImportVar                       Uninitialized Value
===================================================


----------------------
Running the simulation
----------------------
### Initialise the firmware
build-infra.hg/workdir$ nflo -r mefw/ng-nfd/nfd_vnic.fw

### Fake host configuration data in the BARs, we want vNICs 6 and 9 up
#   for these tests.
build-infra.hg/host-system/ng-nfd.hg/me/scripts$ ./wr_vnic_cfg.sh 6 4 1 1 0xF 0xF
build-infra.hg/host-system/ng-nfd.hg/me/scripts$ ./wr_vnic_cfg.sh 9 4 1 1 0xF 0xF

nfmem -l 65536  emem2:0x00000000000:  00000000 00000000 00000000 00000000
*
0000006000:  00000001 00000001 0000000f 00000000
0000006010:  0000000f 00000000 00000000 00000000
0000006020:  00000000 00000000 00000000 00000000
*
0000006400:  47180000 47181000 47182000 47183000
0000006410:  00000000 00000000 00000000 00000000
*
0000006500:  0b0b0b0b 00000000 00000000 00000000
0000006510:  00000000 00000000 00000000 00000000
*
0000006600:  56180000 56181000 56182000 56183000
0000006610:  00000000 00000000 00000000 00000000
*
0000006700:  0b0b0b0b 00000000 00000000 00000000
0000006710:  00000000 00000000 00000000 00000000
*
0000009000:  00000001 00000001 0000000f 00000000
0000009010:  0000000f 00000000 00000000 00000000
0000009020:  00000000 00000000 00000000 00000000
*
0000009400:  47240000 47241000 47242000 47243000
0000009410:  00000000 00000000 00000000 00000000
*
0000009500:  0b0b0b0b 00000000 00000000 00000000
0000009510:  00000000 00000000 00000000 00000000
*
0000009600:  56240000 56241000 56242000 56243000
0000009610:  00000000 00000000 00000000 00000000
*
0000009700:  0b0b0b0b 00000000 00000000 00000000
0000009710:  00000000 00000000 00000000 00000000
*

### Let firmware execute initial configuration
build-infra.hg/workdir$ ~/tools/sdk5/examples/nfsim/step 8000

# check configuration is complete, firmware triggers a user event once done
# this can be observed via event filter 8
build-infra.hg/workdir$ nfp-reg cls:i5.EventManager.Filter8.FilterStatus
cls:i5.EventManager.Filter8.FilterStatus.value=0x141234

# vNIC config rings
nfmem -l 128 emem1:0; nfmem -l 128 emem0:0x180800
0000000000:  00000000 00000002 00000000 00000000
0000000010:  00000000 00000000 00000000 00000000
*
0000180800:  00180800 00180802 00000000 00000000
0000180810:  00000000 00000000 00000000 00000000

# Configuration BAR
nfmem -l 65536  emem2:0x00000000000:  00000000 00000000 00000000 00000000
*
0000000030:  00001248 00000000 0000004f 00000004 # Random version number and capabilities currently
0000000040:  00000004 000005ee 00000000 00000000 # 4 RX and TX queues supported, MTU set to 1518
0000000050:  00000000 00000000 00000000 00000000
*
0000001030:  00001248 00000000 0000004f 00000004
0000001040:  00000004 000005ee 00000000 00000000
0000001050:  00000000 00000000 00000000 00000000
*
0000002030:  00001248 00000000 0000004f 00000004
0000002040:  00000004 000005ee 00000000 00000000
0000002050:  00000000 00000000 00000000 00000000
*
0000003030:  00001248 00000000 0000004f 00000004
0000003040:  00000004 000005ee 00000000 00000000
0000003050:  00000000 00000000 00000000 00000000
*
0000004030:  00001248 00000000 0000004f 00000004
0000004040:  00000004 000005ee 00000000 00000000
0000004050:  00000000 00000000 00000000 00000000
*
0000005030:  00001248 00000000 0000004f 00000004
0000005040:  00000004 000005ee 00000000 00000000
0000005050:  00000000 00000000 00000000 00000000
*
0000006000:  00000001 00000001 0000000f 00000000 # Previous host data unchanged
0000006010:  0000000f 00000000 00000000 00000000
0000006020:  00000000 00000000 00000000 00000000
0000006030:  00001248 00000000 0000004f 00000004
0000006040:  00000004 000005ee 00000000 00000000
0000006050:  00000000 00000000 00000000 00000000
*
0000006400:  47180000 47181000 47182000 47183000
0000006410:  00000000 00000000 00000000 00000000
*
0000006500:  0b0b0b0b 00000000 00000000 00000000
0000006510:  00000000 00000000 00000000 00000000
*
0000006600:  56180000 56181000 56182000 56183000
0000006610:  00000000 00000000 00000000 00000000
*
0000006700:  0b0b0b0b 00000000 00000000 00000000
0000006710:  00000000 00000000 00000000 00000000
*
0000007030:  00001248 00000000 0000004f 00000004
0000007040:  00000004 000005ee 00000000 00000000
0000007050:  00000000 00000000 00000000 00000000
*
0000008030:  00001248 00000000 0000004f 00000004
0000008040:  00000004 000005ee 00000000 00000000
0000008050:  00000000 00000000 00000000 00000000
*
0000009000:  00000001 00000001 0000000f 00000000
0000009010:  0000000f 00000000 00000000 00000000
0000009020:  00000000 00000000 00000000 00000000
0000009030:  00001248 00000000 0000004f 00000004
0000009040:  00000004 000005ee 00000000 00000000
0000009050:  00000000 00000000 00000000 00000000
*
0000009400:  47240000 47241000 47242000 47243000
0000009410:  00000000 00000000 00000000 00000000
*
0000009500:  0b0b0b0b 00000000 00000000 00000000
0000009510:  00000000 00000000 00000000 00000000
*
0000009600:  56240000 56241000 56242000 56243000
0000009610:  00000000 00000000 00000000 00000000
*
0000009700:  0b0b0b0b 00000000 00000000 00000000
0000009710:  00000000 00000000 00000000 00000000
*
...

# RIDs setup in PCI.IN ME1 and PCI.OUT ME1
>> # pcie1.me1
Current MEID:i5.me1 (pcie1.me1) (0x55)

>> pl
Dumping Local Memory:
00000000: 00000000 00000008 00000000 00000008 00000000 00000008 00000000 00000008 # RID = vNIC currently
00000020: 00000001 00000009 00000001 00000009 00000001 00000009 00000001 00000009
00000040: 00000002 0000000a 00000002 0000000a 00000002 0000000a 00000002 0000000a
00000060: 00000003 0000000b 00000003 0000000b 00000003 0000000b 00000003 0000000b
00000080: 00000004 0000000c 00000004 0000000c 00000004 0000000c 00000004 0000000c
000000a0: 00000005 0000000d 00000005 0000000d 00000005 0000000d 00000005 0000000d
000000c0: 00000006 0000000e 00000006 0000000e 00000006 0000000e 00000006 0000000e
000000e0: 00000007 0000000f 00000007 0000000f 00000007 0000000f 00000007 0000000f

>> # pcie1.me3
Current MEID:i5.me3 (pcie1.me3) (0x57)

>> pl
Dumping Local Memory:
00000000: 00000000 00000008 00000000 00000008 00000000 00000008 00000000 00000008 # RID = vNIC currently
00000020: 00000001 00000009 00000001 00000009 00000001 00000009 00000001 00000009
00000040: 00000002 0000000a 00000002 0000000a 00000002 0000000a 00000002 0000000a
00000060: 00000003 0000000b 00000003 0000000b 00000003 0000000b 00000003 0000000b
00000080: 00000004 0000000c 00000004 0000000c 00000004 0000000c 00000004 0000000c
000000a0: 00000005 0000000d 00000005 0000000d 00000005 0000000d 00000005 0000000d
000000c0: 00000006 0000000e 00000006 0000000e 00000006 0000000e 00000006 0000000e
000000e0: 00000007 0000000f 00000007 0000000f 00000007 0000000f 00000007 0000000f


### Request configuration of two VNICS and let it process
build-infra.hg/workdir$ nfp-reg --access front pcie:i5.PcieInternalTargets.Queue73.AddToWritePtr=1; \
                        nfp-reg --access front pcie:i5.PcieInternalTargets.Queue49.AddToWritePtr=1
build-infra.hg/workdir$ ~/tools/sdk5/examples/nfsim/step 16000 # configuration takes a bit longer


# Messages between MEs in the configuration queues
nfmem -l 128 emem1:0; nfmem -l 128 emem0:0x180800
0000000000:  80000009 80000006 00000000 00000000 # bit 31 is a "message valid" flag, bits 7:0 are vNIC
0000000010:  00000000 00000000 00000000 00000000 # bit 30 is error, remaining bits can be used as local state
*
0000180800:  80000009 80000006 00000000 00000000
0000180810:  00000000 00000000 00000000 00000000

# PCI.IN ME0 queue configuration
>> # pcie1.me2
Current MEID:i5.me2 (pcie1.me2) (0x56)

>> pl
Dumping Local Memory:
00000120: 00000000 00000000 000007ff 00000009 47240000 00000000 00000000 00000000 # 7ff -> ring size mask
00000140: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 # 47240000 TX descr ring address
00000160: 00000000 00000000 000007ff 00000009 47241000 00000000 00000000 00000000 # "47" dummy PCI.IN ring high bits
00000180: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 # "24" queue number coded into address (dummy)
000001a0: 00000000 00000000 000007ff 00000009 47242000 00000000 00000000 00000000
000001c0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
000001e0: 00000000 00000000 000007ff 00000009 47243000 00000000 00000000 00000000


# PCI.OUT ME0 queue configuration
>> # pcie1.me0
Current MEID:i5.me0 (pcie1.me0) (0x54)

>> pl
Dumping Local Memory:
00000120: 00000000 00000000 00001fff 00000009 56240000 00000000 00000000 00000000 # "56" dummy PCI.OUT ring high bits
00000140: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 # PCI.OUT configuration unchanged from previous
00000160: 00000000 00000000 00001fff 00000009 56250000 00000000 00000000 00000000
00000180: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
000001a0: 00000000 00000000 00001fff 00000009 56260000 00000000 00000000 00000000
000001c0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
000001e0: 00000000 00000000 00001fff 00000009 56270000 00000000 00000000 00000000

# "App ME Master" dummy acknowledgment
>> # mei0.me0
Current MEID:i32.me0 (mei0.me0) (0x204)

>> M
Read mailboxes
Mailbox0 = 0x6         # Last vNIC configuration command received
Mailbox1 = 0x11223344
Mailbox2 = 0x0
Mailbox3 = 0x0


### Add "packets" to two queues (24 and 36) and set gather_status to display queue 24 in write xfers
build-infra.hg/workdir$ nfp-reg mereg:i5.me2.XferIn_31=24
build-infra.hg/workdir$ nfp-reg --access front pcie:i5.PcieInternalTargets.Queue48.AddToWritePtr=23; \
                        nfp-reg --access front pcie:i5.PcieInternalTargets.Queue72.AddToWritePtr=15
build-infra.hg/workdir$ ~/tools/sdk5/examples/nfsim/step 8000

# Completed simulation state
>> # pcie1.me2
Current MEID:i5.me2 (pcie1.me2) (0x56)

>> po
Dumping XFER OUT:
00000000: 01040000 040c0000 02fff81f 00000000 5a5a5a5a 0000000a 00001248 00000000
00000020: 0000004f 00000004 00000004 000005ee 5a5a5a5a 5a5a5a5a 5a5a5a5a 5a5a5a5a
00000040: 00000000 00000000 00000000 00000000 00000000 00000000 0000000a 0000000a # firmware processed 10 batches total
00000060: 00000017 00000017 000007ff 00000006 47180000 00000000 00000000 00000000 # queue 24 pointers now at 23

>> pl
Dumping Local Memory:
...
00000120: 0000000f 0000000f 000007ff 00000009 47240000 00000000 00000000 00000000 # queue 36 pointers now at 15
00000140: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
...


nfmem -l 1024 cls5:0x2000
0000002000:  00000000 00000000 00000000 00000000 # i5._desc_ring contains DMA descriptors in place of TX desc
*
0000002040:  04006800 47180000 94004100 00002040 # 04006800 -> 4 descriptors, RID 6, 800 other PCIe config
0000002050:  00000000 00000000 00000000 00000000 # 47180000 -> Address in host mem
*
0000002080:  04006800 47180040 94008100 00002080 # 94004100 -> 94004 basic event config + seqn num, 100 other CPP config
0000002090:  00000000 00000000 00000000 00000000 # 00002080 -> Address in CLS
*
00000020c0:  04006800 47180080 9400c100 000020c0
00000020d0:  00000000 00000000 00000000 00000000
*
0000002100:  04006800 471800c0 94010100 00002100
0000002110:  00000000 00000000 00000000 00000000
*
0000002140:  04006800 47180100 94014100 00002140
0000002150:  00000000 00000000 00000000 00000000
*
0000002180:  03006800 47180140 94018100 00002180
0000002190:  00000000 00000000 00000000 00000000
*
00000021c0:  04009800 47240000 9401c100 000021c0 # NB: RID now 9, host address "base" now 47240000
00000021d0:  00000000 00000000 00000000 00000000 #     CPP/CLS related values continue to increment in sequence
*
0000002200:  04009800 47240040 94020100 00002200
0000002210:  00000000 00000000 00000000 00000000
*
0000002240:  04009800 47240080 94024100 00002240
0000002250:  00000000 00000000 00000000 00000000
*
0000002280:  03009800 472400c0 94028100 00002280
0000002290:  00000000 00000000 00000000 00000000
*


>> # pcie1.me3
Current MEID:i5.me3 (pcie1.me3) (0x57)

>> pn
Dumping NN:
00000000: 00000430 00000430 00000430 00000430 00000430 00000330 00000409 00000409 # 10 batches processed
00000020: 00000409 00000309 5a5a5a5a 5a5a5a5a 5a5a5a5a 5a5a5a5a 5a5a5a5a 5a5a5a5a # note the bitmask numbering on the queues (30 and 9)

nfmem -l 128 emem1:0x1000
0000001000:  00000430 00000430 00000430 00000430 # _work_batches agrees with pcie1.me3 NN ring, messages processed correctly
0000001010:  00000430 00000330 00000409 00000409
0000001020:  00000409 00000309 00000000 00000000
0000001030:  00000000 00000000 00000000 00000000
